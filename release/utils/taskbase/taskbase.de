// 2011.07.11 # Doj
// Самописный тасктрекер

namespace TASK-BASE
  0
    t_int -- .id
    t_str -- .short
    t_str -- .descr
    t_int -- .status
    t_int -- .parentId
    t_int -- .createdDate
    t_int -- .changedDate
  struct s_task

  : task-cells s_task 1 cells div 1+ ;
  : task-cells* task-cells * ;

  1024 task-cells* dyn tasks
  : [] ( it) swap task-cells* swap dyn[] ;
  : tasks[] ( i) task-cells* tasks dyn[] ;
  : tasks# tasks dyn# task-cells div ;
  : tasks-high tasks# 1- ;
  : task0! ( p) dup .id off 
                dup .descr dup off str0 b!
                dup .status off
                dup .parentId off
                dup .createdDate off
                dup .changedDate off
                dup .short dup off str0 b!
                drop ;
  : task+ tasks# tasks dyn# task-cells + tasks dyn.l! tasks[] task0! ;
  
  : [].id@ ( it-i) [] .id @ ;
  : [].descr@ ( it- B: s) [] .descr b@ ;
  : [].status@ ( it-i) [] .status @ ;
  : [].parentId@ ( it-i) [] .parentId @ ;
  : [].createdDate@ ( it-i) [] .createdDate @ ;
  : [].changedDate@ ( it-i) [] .changedDate @ ;
  : [].short@ ( it- B: s) [] .short b@ ;
  : tasks[].id@ ( i-i) tasks [].id@ ;
  : tasks[].descr@ ( i- B: s) tasks [].descr@ ;
  : tasks[].status@ ( i-i) tasks [].status@ ;
  : tasks[].parentId@ ( i-i) tasks [].parentId@ ;
  : tasks[].createdDate@ ( i-i) tasks [].createdDate@ ;
  : tasks[].changedDate@ ( i-i) tasks [].changedDate@ ;
  : tasks[].short@ ( i- B: s) tasks [].short@ ;
  : last[].id@ ( -i) tasks-high tasks[].id@ ;
  : last[].descr@ ( - B: s) tasks-high tasks[].descr@ ;
  : last[].status@ ( -i) tasks-high tasks[].status@ ;
  : last[].parentId@ ( -i) tasks-high tasks[].parentId@ ;
  : last[].createdDate@ ( -i) tasks-high tasks[].createdDate@ ;
  : last[].changedDate@ ( -i) tasks-high tasks[].changedDate@ ;
  : last[].short@ ( - B: s) tasks-high tasks[].short@ ;

  : [].id! ( iit-) [] .id ! ;
  : [].descr! ( B:s it-) [] .descr b! ;
  : [].status! ( iit-) [] .status ! ;
  : [].parentId! ( iit-) [] .parentId ! ;
  : [].createdDate! ( iit-) [] .createdDate ! ;
  : [].changedDate! ( iit-) [] .changedDate ! ;
  : [].short! ( B: s it-) [] .short b! ;
  : tasks[].id! ( ii-) tasks [].id! ;
  : tasks[].descr! ( B: s i-) tasks [].descr! ;
  : tasks[].status! ( ii-) tasks [].status! ;
  : tasks[].parentId! ( ii-) tasks [].parentId! ;
  : tasks[].createdDate! ( ii-) tasks [].createdDate! ;
  : tasks[].changedDate! ( ii-) tasks [].changedDate! ;
  : tasks[].short! ( B: s i-) tasks [].short! ;
  : last[].id! ( i-) tasks-high tasks[].id! ;
  : last[].descr! (  B: s -) tasks-high tasks[].descr! ;
  : last[].status! ( i-) tasks-high tasks[].status! ;
  : last[].parentId! ( i-) tasks-high tasks[].parentId! ;
  : last[].createdDate! ( i-) tasks-high tasks[].createdDate! ;
  : last[].changedDate! ( i-) tasks-high tasks[].changedDate! ;
  : last[].short! ( B: s -) tasks-high tasks[].short! ;

  : find ( i-i) 0 begin dup tasks# < while 
                  over over tasks[].id@ = if nip exit then
                1+ repeat drop 0 ;

  : normalize-ids 
    ( 0 begin dup tasks# < while 
      dup tasks[].parentId@ dup 0<> if find over 1+ tasks[].parentId! then
    1+ repeat drop )
    0 begin dup tasks# < while dup 1+ over tasks[].id! 1+ repeat drop
  ;
  
  : about ( "i") source-next-name str->int find
                   dup tasks[].parentId@ ?dup if ." ^^" . then
                   dup tasks[].status@ .
                   dup tasks[].short@ str. space
                   dup tasks[].descr@ str. cr
                   drop
                 ;
\namespace

namespace TASK-BASE-v01
  
\namespace
