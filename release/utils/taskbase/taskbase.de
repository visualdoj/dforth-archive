// 2011.07.11 # Doj
// Самописный тасктрекер

include" units\statements\loops.de"
include" units\statements\switch.de"
include" units\structures\ndyn.de"

namespace TASK-BASE
  0
    t_int -- .id
    t_str -- .short
    t_str -- .descr
    t_int -- .status
    t_int -- .parentId
    t_int -- .createdDate
    t_int -- .changedDate
  struct s_task

  enum STATUS
  STATUS NORMAL
  STATUS CLOSED
  STATUS INPROGRESS
  STATUS STATUS#
  
  create status-chars char o , char x , char * ,
  : status->char ( i-i) cells status-chars + @ ;
  : char->status ( i-i) STATUS# downto0 
        dup cells status-chars + @ lrot tuck = if drop exit then swap
      repeat drop 0 ;
  : status. status->char emit space ;

  1024 ndyn-global tasks

  variable current
  : cur ( -p) current @ ;
  : new-id ( -i) 0 tasks# downto0 dup tasks[] .id @ lrot max swap repeat 1+ ;
  : find ( i-p) tasks# downto0 
        dup tasks[] .id @ lrot tuck = if drop tasks[] exit then swap
      repeat 0 tasks[] ;
  : task ( i) find current ! ;
  : now timer ; // TODO normal time
  : init ( id)
        cur .id !
        cur .short off
        cur .descr off
        cur .status off 
        cur .parentId off
        now dup cur .createdDate ! cur .changedDate ! ;
  : new new-id tasks++ tasks[#] current ! init ;

  // commands that works with current task
  // auto : id cur .id ! ;
  : short cur .short b! ;
  : descr cur .descr b! ;
  : status cur .status ! ;
  : parent cur .parentId ! ;
  // auto : created-date cur .createdDate ! ;
  // auto : changed-date cur .changedDate ! ;
  : about ( p) dup .status @ status. ." #" dup .id @ . ." | " .short b@ str. ;
  : info cur about ;
  // status actions
  : close CLOSED cur .status ! ;
  : open NORMAL cur .status ! ;
  : progress INPROGRESS cur .status ! ;

  : task+ ( B: s) new short ;
  : all 0 begin dup tasks# < while dup tasks[] about cr 1+ repeat drop ;
\namespace

namespace TASK-BASE-v01
  
\namespace
