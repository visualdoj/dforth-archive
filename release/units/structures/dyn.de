: dyn.len ( d-p) ;
: dyn.ptr ( d-p) cell+ ;
: dyn.max ( d-p) 2 cells + ;
: dyn ( "name" i--) create here 3 cells allot 
                       dup dyn.len 0 swap ! 
                       dup dyn.max lrot swap !
                       dup dyn.max @
                       cells malloc swap dyn.ptr ! ;
// dyn set length
: dyn.l! ( id-) ;
// dyn length get
: dyn.l@ ( d-i) dyn.len @ ;
// dyn add element
: dyn.add ( id-) dup 1+! dup @ swap ( ild) dyn.ptr @ swap ( ial) 1- cells + ! ;
// dyn element get
: dyn.e@ ( id-i) dyn.ptr @ swap cells + @ ;

: dyn+ ( id-) dyn.add ;
: dyn# ( d-i) dyn.l@ ;
: dyn[] ( id-i) dyn.ptr @ swap cells + ;

: str-dyn dyn ;
: str-dyn# dyn# ;
: str-dyn.inclen ( d-) dup @ swap dup 1+! dyn[] str-nil swap str! ;
: str-dyn+ ( sd-) dup str-dyn# swap dup str-dyn.inclen dyn[] str! ;
: str-dyn@ ( id-s) dyn[] str@ ;
: str-dyn! ( sid-) dyn[] str! ;

str" Loaded dyn.de" str. cr
