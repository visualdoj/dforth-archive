str" units\structures\dyn.de" evaluate-file // там реализован динамический массив
// {{{
ptr-nil ptr-value lib-user32 // переменная для хранения загруженной либы user32
1000 dyn user32-funcs // массив для хранения функций, которые необходимо загрузить
// }}}
// завершает объявление прототипа функции, которая должна браться из user32 библиотеки
: user32; ( -) stdcall ['] a; execute last user32-funcs dyn.add ; immediate

// {{{ types
: BOOLEAN   t_int8 ;
: BYTE      t_uint8 ;
: CHAR      t_uint8 ;
: DWORD     t_uint32 ;
: FLOAT     t_single ;
: UINT      t_uint ;
: LONG      t_int32 ;
: LONGLONG  t_int64 ;
: HANDLE    t_ptr ;
: HWND      HANDLE ;
: HBITMAP   HANDLE ;
: HBRUSH    HANDLE ;
: HCURSOR   HANDLE ;
: HDC       HANDLE ;
: HFILE     HANDLE ;
: HFONT     HANDLE ;
: HICON     HANDLE ;
: HINSTANCE HANDLE ;
: HKEY      HANDLE ;
: HMENU     HANDLE ;
: HMODULE   HANDLE ;
: HINST     HANDLE ;
: HRESULT   LONG ;
: LPCSTR    t_pchar ;

: LPSTR t_pchar ;  
: TBYTE t_int8 ;
: TCHAR t_uint8 ;
: ATOM  t_uint16 ;
: BCHAR t_uint8 ;
: DWORD t_uint ;
: SHORT t_int16 ; ( TODO)
: LARGE_INTEGER t_ptr ( record) ;
: PLARGE_INTEGER t_ptr ( ^LARGE_INTEGER) ;       
: POINTL t_ptr ( record) ;
: LPPOINT t_ptr ( ^POINT) ;       
: LONG_PTR t_int ;
: WPARAM LONG_PTR ;
: LPARAM LONG_PTR ;     
: LRESULT LONG_PTR ;    
: WINBOOL t_uint32 ( longbool) ;
: BOOL WINBOOL ;     
: LPCTSTR t_pchar ;
: LPVOID  t_ptr ;
: PVOID t_ptr ;     
: DEVMODE t_ptr ( record) ;
: LPDEVMODE t_ptr ( ^DEVMODE) ;
: HGLOBAL HANDLE ;
: HGLRC HANDLE ;     
: PIXELFORMATDESCRIPTOR t_ptr ( record) ;
: PPIXELFORMATDESCRIPTOR t_ptr ( ^PIXELFORMATDESCRIPTOR) ;       
: POINT t_ptr ( record) ;
: TPOINT POINT ;
: RECT t_ptr ( record) ;
: TRECT RECT ;
: LPRECT t_ptr ( ^RECT) ;     
: WNDPROC t_ptr ( function {_para1:HWND; _para2:UINT; _para3:WPARAM; _para4:LPARAM}:LRESULT;stdcall ) ;     
: WNDCLASSEX t_ptr ( record) ;
: LPWNDCLASSEX t_ptr ( ^WNDCLASSEX) ;       
: PWNDCLASSEX t_ptr ( ^WNDCLASSEX) ;       
: MSG t_ptr ( record) ;
: TMSG MSG ;
: LPMSG t_ptr ( ^MSG) ;       
: FARPROC t_ptr ;

: FILETIME t_ptr ( record) ;
: LPFILETIME t_ptr ( ^FILETIME) ;
: _FILETIME FILETIME ;
: TFILETIME FILETIME ;
: PFILETIME t_ptr ( ^FILETIME) ;

: WIN32_FIND_DATA t_ptr ( record) ;
: LPWIN32_FIND_DATA t_ptr ( ^WIN32_FIND_DATA) ;
: PWIN32_FIND_DATA t_ptr ( ^WIN32_FIND_DATA) ;
: _WIN32_FIND_DATA t_ptr ( WIN32_FIND_DATA) ;
: TWIN32FINDDATA t_ptr ( WIN32_FIND_DATA) ;
: TWIN32FINDDATAA t_ptr ( WIN32_FIND_DATA) ;
: WIN32FINDDATAA t_ptr ( WIN32_FIND_DATA) ;
: PWIN32FINDDATA t_ptr ( ^WIN32_FIND_DATA) ;
// }}}
// {{{ constants
1               constant CF_TEXT

2               constant CS_HREDRAW
32              constant CS_OWNDC
1               constant CS_VREDRAW
  
-1              constant INVALID_HANDLE_VALUE 

32              constant FILE_ATTRIBUTE_ARCHIVE 
128             constant FILE_ATTRIBUTE_NORMAL 
16              constant FILE_ATTRIBUTE_DIRECTORY 
2               constant FILE_ATTRIBUTE_HIDDEN 
1               constant FILE_ATTRIBUTE_READONLY 
4               constant FILE_ATTRIBUTE_SYSTEM 
256             constant FILE_ATTRIBUTE_TEMPORARY 
h0200           constant FILE_ATTRIBUTE_SPARSE_FILE 
h0400           constant FILE_ATTRIBUTE_REPARSE_POINT 
h0800           constant FILE_ATTRIBUTE_COMPRESSED 
h1000           constant FILE_ATTRIBUTE_OFFLINE 
h2000           constant FILE_ATTRIBUTE_NOT_CONTENT_INDEXED 
h4000           constant FILE_ATTRIBUTE_ENCRYPTED 
h20000          constant FILE_ATTRIBUTE_VIRTUAL 

h80000000       constant FILE_FLAG_WRITE_THROUGH 
1073741824      constant FILE_FLAG_OVERLAPPED 
536870912       constant FILE_FLAG_NO_BUFFERING 
268435456       constant FILE_FLAG_RANDOM_ACCESS 
134217728       constant FILE_FLAG_SEQUENTIAL_SCAN 
67108864        constant FILE_FLAG_DELETE_ON_CLOSE 
33554432        constant FILE_FLAG_BACKUP_SEMANTICS 
16777216        constant FILE_FLAG_POSIX_SEMANTICS 
0               constant SECURITY_ANONYMOUS 
65536           constant SECURITY_IDENTIFICATION 
131072          constant SECURITY_IMPERSONATION 
196608          constant SECURITY_DELEGATION 
262144          constant SECURITY_CONTEXT_TRACKING 
524288          constant SECURITY_EFFECTIVE_ONLY 
1048576         constant SECURITY_SQOS_PRESENT 
  ( CreateFileMapping, VirtualAlloc, VirtualFree, VirtualProtect)
134217728       constant SEC_COMMIT 
16777216        constant SEC_IMAGE 
268435456       constant SEC_NOCACHE 
67108864        constant SEC_RESERVE 
2               constant PAGE_READONLY 
4               constant PAGE_READWRITE 
8               constant PAGE_WRITECOPY 
16              constant PAGE_EXECUTE 
32              constant PAGE_EXECUTE_READ 
64              constant PAGE_EXECUTE_READWRITE 
128             constant PAGE_EXECUTE_WRITECOPY 
256             constant PAGE_GUARD 
1               constant PAGE_NOACCESS 
512             constant PAGE_NOCACHE 
4096            constant MEM_COMMIT 
65536           constant MEM_FREE 
8192            constant MEM_RESERVE 
16777216        constant MEM_IMAGE 
262144          constant MEM_MAPPED 
131072          constant MEM_PRIVATE 
16384           constant MEM_DECOMMIT 
32768           constant MEM_RELEASE 
1048576         constant MEM_TOP_DOWN 
h80000          constant MEM_RESET        
h200000         constant MEM_WRITE_WATCH  
h400000         constant MEM_PHYSICAL     
h20000000       constant MEM_LARGE_PAGES  
h80000000       constant MEM_4MB_PAGES    

-1              constant ENUM_CURRENT_SETTINGS  
2               constant GMEM_MOVEABLE 
-16             constant GWL_STYLE 
-21             constant GWL_USERDATA 
32512           constant IDC_ARROW 
 
     // OpenGL! O_o
h1              constant PFD_DOUBLEBUFFER 
h4              constant PFD_DRAW_TO_WINDOW 
h20             constant PFD_SUPPORT_OPENGL 
0               constant PFD_MAIN_PLANE 
0               constant PFD_TYPE_RGBA 

1               constant PM_REMOVE 
32              constant SWP_FRAMECHANGED 
512             constant SWP_NOOWNERZORDER 
5               constant SW_SHOW 
hc00000         constant WS_CAPTION 
h40000          constant WS_EX_APPWINDOW 
h100            constant WS_EX_WINDOWEDGE 
h80000000       constant WS_POPUP 
h10000000       constant WS_VISIBLE 
32              constant CCHDEVICENAME 
32              constant CCHFORMNAME 
37              constant VK_LEFT 
38              constant VK_UP 
39              constant VK_RIGHT 
40              constant VK_DOWN 
h70             constant VK_F1  
h71             constant VK_F2  
h72             constant VK_F3  
h73             constant VK_F4  
h74             constant VK_F5  
h75             constant VK_F6  
h76             constant VK_F7  
h77             constant VK_F8  
h78             constant VK_F9  
h79             constant VK_F10 
h7A             constant VK_F11 
h7B             constant VK_F12 

260             constant MAX_PATH 

h0001           constant SEM_FAILCRITICALERRORS             
h0004           constant SEM_NOALIGNMENTFAULTEXCEPT         
h0002           constant SEM_NOGPFAULTERRORBOX              
h8000           constant SEM_NOOPENFILEERRORBOX             

h0002           constant MB_ABORTRETRYIGNORE
h0006           constant MB_CANCELTRYCONTINUE
h4000           constant MB_HELP
h0000           constant MB_OK
h0001           constant MB_OKCANCEL
h0005           constant MB_RETRYCANCEL
h0004           constant MB_YESNO
h0003           constant MB_YESNOCANCEL
// }}}
// {{{ prototypes
:a MessageBoxA HWND LPCSTR LPCSTR UINT                  LONG user32;
:a AdjustWindowRect LPRECT DWORD WINBOOL                WINBOOL user32;
:a ChoosePixelFormat HDC PPIXELFORMATDESCRIPTOR         LONG user32;
:a CloseClipboard                                       WINBOOL user32;
:a CreateWindowExA DWORD LPCSTR LPCSTR DWORD LONG LONG 
                   LONG LONG HWND HMENU HINST LPVOID    HWND user32;
:a DefWindowProcA HWND UINT WPARAM LPARAM               LRESULT user32;
:a DispatchMessageA LPMSG                               LONG user32;
:a EmptyClipboard                                       WINBOOL user32;
:a EnumDisplaySettingsA LPCSTR DWORD LPDEVMODE          WINBOOL user32;
:a GetClipboardData UINT                                HANDLE user32;
:a GetCursorPos LPPOINT                                 WINBOOL user32;
:a GetDC HWND                                           HDC user32;
:a GetKeyState LONG                                     SHORT user32;
:a GetWindowLongA HWND LONG                             LONG user32;
:a GetWindowRect HWND LPRECT                            WINBOOL user32;
:a GlobalAlloc UINT DWORD                               HGLOBAL user32;
:a GlobalLock HGLOBAL                                   LPVOID user32;
:a GlobalUnlock HGLOBAL                                 WINBOOL user32;
:a IsClipboardFormatAvailable UINT                      WINBOOL user32;
:a LoadCursorA HINST LPCSTR                             HCURSOR user32;
:a MoveWindow HWND LONG LONG LONG LONG WINBOOL          WINBOOL user32;
:a OpenClipboard HWND                                   WINBOOL user32;
:a PeekMessageA LPMSG HWND UINT UINT UINT               WINBOOL user32;
:a RegisterClassExA PWNDCLASSEX                         ATOM user32;
:a SetClipboardData UINT HANDLE                         HANDLE user32;
:a SetFocus HWND                                        HWND user32;
:a SetForegroundWindow HWND                             WINBOOL user32;
:a SetPixelFormat HDC LONG PPIXELFORMATDESCRIPTOR       WINBOOL user32;
:a SetWindowLongA HWND LONG LONG                        LONG user32;
:a SetWindowTextA HWND LPCSTR                           WINBOOL user32;
:a SetWindowPos HWND HWND LONG LONG LONG LONG UINT      WINBOOL user32;
:a ShowCursor WINBOOL                                   t_int user32;
:a ShowWindow HWND t_int                                WINBOOL user32;
:a SwapBuffers HDC                                      WINBOOL user32;
:a TranslateMessage LPMSG                               WINBOOL user32;
:a UpdateWindow HWND                                    WINBOOL user32;
:a wglCreateContext HDC                                 HGLRC user32;
:a wglMakeCurrent HDC HGLRC                             WINBOOL user32;
:a QueryPerformanceCounter PLARGE_INTEGER               WINBOOL user32;
:a QueryPerformanceFrequency PLARGE_INTEGER             WINBOOL user32;
:a SetCurrentDirectory LPCSTR                           WINBOOL user32;
:a GetCurrentDirectory DWORD LPSTR                      DWORD user32;
:a FindFirstFile LPCSTR LPWIN32_FIND_DATA               HANDLE user32;
:a FindNextFile HANDLE LPWIN32_FIND_DATA                WINBOOL user32;
:a FindClose HANDLE                                     WINBOOL user32;
:a SetErrorMode UINT                                    UINT user32;
// }}}

// функция прописывает в alien-команду x адрес из библиотеки l
: windows-load-fun ( lx-) tuck xt.n@ pchar->str lib-fun swap xt.d@ ! ;
// : windows-load-fun ( lx-) locals| xt| xt xt.name lib-fun 
//                           dup xt xt.name windows-check-fun-loaded 
//                           xt xt.d@ ! ;
// функция, пробегающая массивы с прототипами и прописывающая команды
// её должна вызывать программа, подключившая windows.de
: windows-load
  str" User32.dll" lib-load 
     0= if str" Cannot load User32.dll" str. cr lib-unload exit then 
  to lib-user32
  0 begin dup user32-funcs dyn.l@ < while 
     dup lib-user32 swap user32-funcs dyn.e@ windows-load-fun
    1+
  repeat drop
;


str" Loaded windows.de" str. cr
