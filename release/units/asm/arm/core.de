// 2011.07.31 # Doj
// Основные объявления

include" units/statements/switch.de"
include" units/statements/var.de"

namespace ARM
// TRANSLATOR OPTIONS
  // автоматически вызывать imm и disp у чисел
  variable *auto-integers?
  // компилировать в THUMP режиме
  variable *thumb?
  // переключение режима
  : CODE16 *thumb? on ;
  : CODE32 *thumb? off ;
  // режим по умолчанию
  CODE32

  // текущая позиция в ассемблерном коде (для вычисления адресов меток)
  : pos@ ( -p) here ;
  // записать в ассемблерный код байт
  : byte<< uint->uint8 uint8, ;
  : word<< uint->uint16 uint16, ;
  : dword<<  uint->uint32 uint32, ;
  // перехват сообщений об ошибках
  : error ( B: s) ." Error: " str. cr ;
  : unknown-operand-type " unknown operand type" error ;
  : underconstruction " underconstruction" error ;

// REGISTERS
  : enum8 0 begin dup 8 < while dup constant 1+ repeat drop ;
  // registers R0-R15
  :noname
    0 begin dup 16 < while 
      " R" dup int->str str+ dup constanted
    1+ repeat drop ; execute

  // Aliases
  R15 constant PC
  // fiq mode
  R8 constant R8_fiq
  R9 constant R9_fiq
  R10 constant R10_fiq
  R11 constant R11_fiq
  R12 constant R12_fiq
  R13 constant R13_fiq
  R14 constant R14_fiq
  // supervisor mode
  R13 constant R13_svc
  R14 constant R14_svc
  // abort mode
  R13 constant R13_abt
  R14 constant R14_abt
  // irq mode
  R13 constant R13_irq
  R14 constant R14_irq
  // undefined
  R13 constant R13_und
  R14 constant R14_und
  // THUMB
  R13 constant SP
  R14 constant LR
  // 
  16 constant CPSR
  // SPSR?

  // Условия выполнения инструкции, 4bit
  0 enum CONDITION
  CONDITION EQ // Z set                         / equal
  CONDITION NE // Z clear                       / not equal
  CONDITION CS // C set                         / unsigned higher or same
  CONDITION CC // C clear                       / unsigned lower
  CONDITION MI // N set                         / negative
  CONDITION PL // N clear                       / positive or zero
  CONDITION VS // V set                         / overflow
  CONDITION VC // V clear                       / no overflow
  CONDITION HI // C set and Z clear             / unsigned higher
  CONDITION LS // C clear or Z set              / unsigned lower or same
  CONDITION GE // N equals V                    / greater or equal
  CONDITION LT // N not equal to V              / less than
  CONDITION GT // Z clear AND (N equals V)      / greater than
  CONDITION LE // Z set OR (N not equal to V)   / less than or equal
  CONDITION AL // (ignored)                     / always
  // Условие текущей инструкции
  AL var COND

  // Параметры инструкции
  0 var S // set conditions
  0 var I // immediate/register
  0 var Rd // destination register
  0 var Rn // 1st operand register
  0 var Rm // 2nd operand register
  0 var Shift // 8bit shift for 2nd operand
  0 var Imm // 8bit immediate value
  0 var Rotate // 4bit rotation for immediate operand

  : init-parameters
    AL COND! 0 S! 0 I! 0 Rd! 0 Rn! 0 Rm! 0 Shift! 0 Imm! 0 Rotate! ;

\namespace
