// 2011.07.21 # Doj
// Ёксперименты с ассемблером

include" units\asm\asm.de"
include" units\asm\i386\all.de"

asm simple
uses I386 TRANSLATOR
  NOP
  NOP
  RET
\uses

simple

:asm-noname  uses I386 TRANSLATOR
  NOP
  NOP
  RET

\uses asm-noname; execute

variable *test
666 *test !

// : 3ebx
// I386 TRANSLATOR
    // mov ebx 100
    // mov ebx 100
    // mov ebx 100
// ^ ^ 
// ;

1 2 3
:asm-noname  uses I386 TRANSLATOR  
  PREFIX
    mov edx eax
    *auto-integers? on
    mov edx 100
    // 3ebx
    *auto-integers? off
    mov edx eax
    mov eax d[ *test disp ]
    inc eax
    mov d[ *test disp ] eax
    mov eax edx
    dec d[ eax ]
    dec d[ eax ]
    dec d[ eax ]
    dec d[ eax ]
    neg d[ eax ]
    neg d[ eax ]
  \PREFIX

  EAX reg INC
  EAX reg PUSH
  700 imm PUSH
  fs PUSH
  gs PUSH
  d[ eax ] PUSH
   
  PREFIX
    push eax
    push ebx
    pop edx
    pop edx

    inc esp
    inc d[ eax ]
    inc b[ eax ]
    dec b[ eax ]
    dec d[ eax ]
    dec esp

    push d[ eax ]
    push ds
    pop ds
    pop d[ eax ]

    pop ebx 
    pop eax 
    pop eax 
    pop eax 
    pop eax 
    mov eax 5 imm
    ret
  \PREFIX

  EBX reg POP
  ebx POP
  eax POP
  eax POP
  eax POP
  RET 
\uses asm-noname; execute . . cr
." *test = " *test @ . cr 

uses I386 TRANSLATOR
  : lea_eax_[eax_4*edx] db h8d h04 h90 \db ;
\uses

variable *a 505 *a !
variable *b 343 *b !
:asm-noname  uses I386 TRANSLATOR  
  PREFIX
    // mov eax d[ *b disp ]
    // mov edx eax
    // mov eax d[ *a disp ]
    // inc eax
    // db h8d h04 h90 \db
    // lea_eax_[eax_4*edx]
    // mov d[ *a disp ] eax
    mov eax d[ *a disp ]
    mov edx d[ *b disp ]
    db h8d h04 h90 \db
    // mov d[ *a disp ] eax
    mov edx eax
    mov d[ *a disp ] edx
    mov w[ *b disp ] 1000 imm
    ret
  \PREFIX
\uses asm-noname; execute
." *a = " *a @ . cr
." *b = " *b @ . cr

uses I386 TRANSLATOR
  EBP reg
  666 imm
  d[ EAX base 2 factor EBX index 45 disp ]
  first operand. cr 
  second operand. cr 
  third operand. cr
  clear-operands

  d[ EAX base EBP index 45 disp ] first operand. cr 
  GS seg second operand. cr 
  clear-operands

  d[ eax ebp ] last-operand operand. cr 
  d[ eax 3* ebp ] last-operand operand. cr 
  clear-operands
\uses
