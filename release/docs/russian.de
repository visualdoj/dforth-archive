// 2010.12.06 # Doj
// Встроенная помощь для русскоязычных пользователей

// {{{ stack
" drop"         " ( a-) удаляет с вершины стека значение" described
" nip"          " ( ab-b) удаляет второй по счёту элемент стека" described
" dup"          " ( a-aa) дублирует верхний элемент стека" described
" over"         " ( ab-aba) заталкивает второй элемент стека на вершину" described
" tuck"         " ( ab-bab) заталкивает верхний элемент под второй" described
" swap"         " ( ab-ba) меняет два верхних элемента местами" described
" lrot"         " ( abc-bca) вращает три верхних элемента стека циклически влево" described
" rrot"         " ( abc-cab) вращает три верхних элемента стека циклически вправо" described
" pick"         " ( a1 a2 .. an n -- a1 a2 .. an a1) копирует n-ный по счёту элемент стека на вершину" described
// }}}
// {{{ arythmetic
" +" " ( a b -- a+b) складывает два верхних элемента стека" described
" -" " ( a b -- a-b) вычитает из второго элемента первый" described
" *" " ( a b -- a*b) перемножает два верхних элемента стека" described
" =" " ( a b -- a=b) если два верхних элемента равны, заталкивает true, иначе false" described
" <>" " ( a b -- a<>b) если два верхних элемента не равны, заталкивает true, иначе false" described
" <" " ( a b -- a<b) если второй элемент меньше первого, заталкивает true, иначе false" described
" >" " ( a b -- a>b) если второй элемент больше первого, заталкивает true, иначе false" described
" <=" " ( a b -- a<=b) если второй элемент меньше, либо равен первому, заталкивает true, иначе false" described
" >=" " ( a b -- a<=b) если второй элемент больше, либо равен первому, заталкивает true, иначе false" described
" 0=" " ( a -- a=0) если верхний элемент равен 0, заталкивает true, иначе false" described
" 0<>" " ( a -- a<>0) если верхний элемент не равен 0, заталкивает true, иначе false" described
" 0<" " ( a -- a<0) если верхний элемент меньше 0, заталкивает true, иначе false" described
" 0>" " ( a -- a>0) если верхний элемент больше 0, заталкивает true, иначе false" described
" 0<=" " ( a -- a<=0) если верхний элемент меньше, либо равен 0, заталкивает true, иначе false" described
" 0>=" " ( a -- a>=0) если верхний элемент больше, либо равен 0, заталкивает true, иначе false" described
" ?dup" " ( a-0|aa) если верхний элемент больше, либо равен 0, заталкивает true, иначе false" described
" 0;" " ( a-a|) если верхний элемент равен нулю, снимает его и выходит из функции, иначе ничего не делает" described
" max" " ( ab-a|b) из двух верхних элементов стека оставляет максимальный" described
" min" " ( ab-a|b) из двух верхних элементов стека оставляет минимальный" described
" minmax" " ( ab-ab|ba) переставляет два верхних элемента так, чтобы на вершине оказался наибольший" described

" div" " ( a b -- a div b) целая часть от деления двух целых чисел" described
" mod" " ( a b -- a mod b) остаток от деления двух целых чисел" described
" divmod" " ( a b -- a div b, a mod b) вычисляет целую часть и остаток от деления двух целых чисел" described
" inc" " ( a -- a+1) увеличивает целое число на 1" described
" dec" " ( a -- a-1) уменьшает целое число на 1" described
" 1+" " ( a -- a+1) увеличивает int или uint на 1" described
" 1-" " ( a -- a-1) уменьшает int или uint на 1" described

" abs" " ( a -- |a|) вычисляет модуль знакового числа" described
" neg" " ( a -- -a) обращает знак числа знакого типа" described

" /" " ( ab -- a/b) делит два числа с плавающей точкой" described
" cos" " ( a -- cos(a)) вычисляет косинус числа радиан с плавающей точкой" described
" sin" " ( a -- sin(a)) вычисляет синус числа радиан с плавающей точкой" described
" tan" " ( a -- tan(a)) вычисляет тангенс числа радиан с плавающей точкой" described
" atan" " ( a -- atan(a)) вычисляет арктангенс числа радиан с плавающей точкой" described
" atan2" " ( yx -- atan2(y, x)) см. в гугле atan2" described
// }}}
// {{{ bool & bits
" false" " ( -- false) кладёт на стек ложь (число со сброшенными всеми битами, т.е. 0)" described
" true" " ( -- false) кладёт на стек ложь (число с выставленными всеми битами)" described
" not" " ( a -- not a) побитовое НЕ. Применённое к true и false даёт булевский вариант" described
" or" " ( a b -- a or b) побитовое ИЛИ. Применённая к true и false даёт булевский вариант" described
" and" " ( a b -- a and b) побитовое И. Применённая к true и false даёт булевский вариант" described
" xor" " ( a b -- a xor b) побитовое исключающее ИЛИ. Применённая к true и false даёт булевский вариант" described
// }}}
// {{{ createwords
" create" " ( 'name'-) создаёт новую команду с именем name" described
" allot" " ( i-) выделяет i байт в шитом коде для последней созданной команды" described
" here" " ( -p) текущий указатель на незанятую область шитого кода" described
" ," " ( i-) выделяет ячейку в шитом коде, и записывает в неё ячейку со стека" described
" to" " I ( i 'name'-) ( C:'name'-) ( R:i-) записывает значение i в переменную name" described
" variable" " ( 'name'-) создаёт команду с именем name, выделяет для неё ячейку в шитом коде. name кладёт на стек указатель на свою область в шитом коде" described
" value" " ( i 'name'-) создаёт команду с именем name, выделяет для неё ячейку в шитом коде, инициализирует её числом со стека. name кладёт на стек значение из шитого кода" described
" constant" " ( i 'name'-) то же, что и value" described
" does>" " в режиме компиляции приостанавливает компиляцию текущего определения и включает компиляцию для последнего созданного слова" described
// }}}
// {{{ ptr
" @" " ( p-i) читает ячейку, на которую ссылается указатель" described
" !" " ( ip-) записывает ячейку по заданному адресу" described
" 1+!" " ( p-) увеличивает ячейку по заданному адресу на 1" described
" 1-!" " ( p-) уменьшает ячейку по заданному адресу на 1" described
" cell+" " ( p-p) увеличивает значение указателя на размер ячейки" described
" cells" " ( i-i) считает сколько байт займёт определённое кол-во ячеек" described
" malloc" " ( i-p) выделяет i байт в куче, кладёт указатель на область" described
" free" " ( p-) освобождает выделенную ранее при помощи malloc область" described
// }}}
// {{{ statements
" branch" " совершает скачек на определённый адрес в коде. При этом адрес берётся из последующего после команды числа в шитом коде." described
" ?branch" " ( i-) если i рано нулю, то действует как branch, в противном случае ничего не делает" described
" >mark" " I ( C:-- embroptr) при исполнении ничего не делает, при компиляции кладёт текущий адрес на стек и выделяет в шитом коде место под запись адреса" described
" >resolve" " I ( C:embroptr --) при исполнении ничего не делает, при компиляции извлекает со стека адрес в шитом коде и записывает по нему адрес текущего положения в шитом коде" described
" <mark" " I ( C:-- embroptr) при исполнении ничего не делает, при компиляции кладёт текущий адрес на стек" described
" <resolve" " I ( C:embroptr --) при исполнении ничего не делает, при компиляции извлекает со стека адрес в шитом коде и записывает его в шитый код" described
" :" " ( 'name'-) переводит машину в режим компиляции, начинает определение функции name" described
" ;" "         I 
    Завершает определение функции, переводит машину в режим интерпретации и 
    добавляет новую команду в словарь
        Пример использования: 
                : 195+ 195 + ;
                5 195+ ." described
" immediate" " делает последнюю определённую команду командой немедленного исполнения" described
" exit" " выходит из текущей функции" described
" recurse" " I рекурсивный вызов определяемой функции" described
// " +loop" " : X ... limit first DO ... step +LOOP ;
// Если +loop пересекает границу limit и limit-1, то выполнение прекращается" described
// " loop" " : X ... limit first DO ... step LOOP ;
// Если после выполнения LOOP значение индекса стало равно limit, то выполнение
// прекращается 
// Если +loop пересекает границу limit и limit-1, то выполнение прекращается" described
// }}}
// {{{ console
" ." " ( i-) выводит число с вершины стека на консоль" described
// }}}
" test" " one
two
three" described
