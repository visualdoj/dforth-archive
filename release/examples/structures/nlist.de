// 2011.08.09 # Doj
// Пример использования списков структур

include" units\structures\nlist.de"

// Описываем структуру с полями a, b, c, d
0
  t_int -- .a
  t_int -- .b
  t_int -- .c
  t_int -- .d
struct s_abcd

// Функция, печатающая значения полей структуры на консоль
: abcd. ( p-) dup .a @ . dup .b @ . dup .c @ . .d @ . ;

// Создаём динамический массив list, состоящий из структур s_abcd
// Первый параметр (2) -- это capacity, предполагаемое число элементов
// Память под такое число элементов будет выделена изначально
// При этом никакие ограничения на использование массива это не накладывает
// (можно передать любое неотрицательное число)
2 s_abcd nlist-global list

// Получить число элементов в list можно двумя способами:
//     list ndyn#
//     list#
// Сейчас число элементов равно 0
." list# = " list# . cr

// Увеличиваем число элементов в массиве на 1
// Сделать это можно двумя способами:
//    list ndyn++
//    list++
list++
." list# = " list# . cr

// Получаем данные последнего элемента
list[#]

// Записываем в полученную структуру значения 5 6 7 8
5 over .a !
6 over .b !
7 over .c !
8 over .d !
drop

// Печатаем элемент на консоль, убеждаемся, что это 5 6 7 8
." list[#] = " list[#] abcd. cr

// Добавляем нулевые элементы
list0+
list0+
list0+

:noname  list[#] begin ." {" dup abcd. ." } " cr nlist>> not until ; execute
